package io.github.anon10w1z.expcrafting;

import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.nbt.NBTTagCompound;
import net.minecraft.world.World;
import net.minecraftforge.common.IExtendedEntityProperties;

public class ExperienceCraftingPlayerProperties implements IExtendedEntityProperties {
	public EntityPlayer player;
	public int maxExperienceLevel = 0;
	
	@Override
	public void saveNBTData(NBTTagCompound nbtTagCompound) {
		nbtTagCompound.setInteger("MAX_LEVEL", this.maxExperienceLevel);
	}

	@Override
	public void loadNBTData(NBTTagCompound nbtTagCompound) {
		this.maxExperienceLevel = nbtTagCompound.getInteger("MAX_LEVEL");
	}

	@Override
	public void init(Entity entity, World world) {

	}
	
	public static void updateMaxExperienceLevel(EntityPlayer player) {
		setMaxExperienceLevel(player, Math.max(player.experienceLevel, getMaxExperienceLevel(player)));
	}
	
	public static void setMaxExperienceLevel(EntityPlayer player, int maxExperienceLevel) {
		((ExperienceCraftingPlayerProperties) player.getExtendedProperties("EXPERIENCE_CRAFTING_PROPERTIES")).maxExperienceLevel = maxExperienceLevel;
	}
	
	public static int getMaxExperienceLevel(EntityPlayer player) {
		if (player == null)
			return 0;
		if (player.getExtendedProperties("EXPERIENCE_CRAFTING_PROPERTIES") == null)
			player.registerExtendedProperties("EXPERIENCE_CRAFTING_PROPERTIES", new ExperienceCraftingPlayerProperties());
		return ((ExperienceCraftingPlayerProperties) player.getExtendedProperties("EXPERIENCE_CRAFTING_PROPERTIES")).maxExperienceLevel;
	}
}
